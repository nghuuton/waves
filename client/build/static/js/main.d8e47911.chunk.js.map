{"version":3,"sources":["components/utils/button.js","components/Home/home_slider.jsx","components/Home/home_promotion.jsx","actions/products_actions.js","actions/types.js","components/utils/misc.js","actions/user_actions.js","components/utils/card.js","components/utils/card_block.js","components/Home/index.jsx","components/Header_footer/Header/index.jsx","components/Header_footer/Footer/index.jsx","actions/site_actions.js","HOC/layout.jsx","components/utils/Form/formField.js","components/utils/Form/formAction.js","components/Register_login/login.jsx","components/Register_login/index.jsx","components/Register_login/register.jsx","HOC/user.jsx","components/utils/User/history_block.js","components/User/index.jsx","HOC/auth.jsx","components/utils/page_top.js","components/utils/collapseCheckbox.js","components/utils/collapseRadio.js","components/utils/Form/fixed_categories.js","components/utils/card_block_shop.js","components/Shop/loadMoreCards.jsx","components/Shop/index.jsx","components/utils/Form/fileUpload.js","components/User/Admin/add_product.jsx","components/User/Admin/manage_brands.jsx","components/User/Admin/manage_woods.jsx","components/User/Admin/manage_categories.jsx","components/Product/productNfo.jsx","components/utils/lightBox.js","components/Product/productImg.jsx","components/Product/index.jsx","components/utils/User/product_block.js","components/utils/paypal.js","components/User/cart.jsx","components/User/update_personal_Nfo.jsx","components/User/user_profile.jsx","components/User/Admin/update_site_nfo.jsx","components/User/Admin/manage_site.jsx","components/utils/not_found.js","components/User/Admin/add_file.jsx","components/Reset_user/index.jsx","components/Reset_user/reset_pass.jsx","routes.js","reducers/index.js","reducers/user_reducer.js","reducers/product_reducer.js","reducers/site_reducer.js","index.js"],"names":["MyButton","props","className","template","type","Link","altClass","to","linkTo","addStyles","title","onClick","runAction","icon","faShoppingBag","buttons","HomeSlider","sliders","img","lineOne","lineTwo","linkTitle","settings","dots","infinite","speed","slidersToShow","slidersToScroll","arrows","map","item","i","key","style","background","height","window","innerHeight","margin","HomePromotion","promotion","getBrands","payload","axios","get","then","response","data","brands","getWoods","woods","getProductsToShop","skip","limit","filters","previousState","request","post","newState","articles","size","addProduct","dataToSubmit","addBrand","existingBrands","brand","success","addWood","existingWoods","wood","loginUser","registerUser","auth","logoutUser","addToCart","_id","removeItem","onSuccessBuy","updateData","Card","renderCardImage","images","length","url","this","grid","name","price","description","user","userData","isAuth","dispatch","history","push","Component","connect","state","CardBlock","display","flexWrap","list","card","Home","products","bySell","byArrival","Header","page","public","logOuthandle","defaultLink","cartLink","cart","showLinks","forEach","withRouter","Footer","site","siteData","faCompass","address","faPhone","phone","faClock","hours","faEnvelope","email","getSiteData","updateSiteNfo","Layout","children","FormField","formdata","change","id","showError","errorMessage","validation","valid","validationMessage","formTemplate","element","showLabel","config","label","value","onBlur","event","blur","onChange","options","renderTemplate","update","formName","newFormdata","newElement","target","validData","error","test","message","confirm","trim","required","validate","touched","generateData","isFormValid","formIsValid","populateOptionFields","array","field","newArray","resetFields","formname","populateFields","formData","fiels","Login","formError","formSuccess","placeholder","password","updateForm","setState","submitForm","preventDefault","loginSuccess","onSubmit","marginLeft","RegisterLogin","Register","lastname","confirmPassword","setTimeout","catch","err","open","links","linksAdmin","isAdmin","UserHistoryBlock","product","poder","quantity","UserDashboard","ComposedClass","reload","adminRoute","AuthenticationCheck","loading","color","thickness","mapStateToProps","PageTop","CollapseCheckbox","checked","handeleClick","handeleAngle","faAngleUp","faAngleDown","renderList","paddig","primary","handleToggle","indexOf","currentIndex","newChecked","splice","handleFilters","initState","borderBottom","padding","in","timeout","unmountOnExit","component","disablePadding","CollapseRadio","control","handleChange","aria-label","frets","prices","CardBlockShop","LoadMoreCard","loadMore","Shop","category","newFilters","newPrices","find","parseInt","showFilteredResults","loadMoreCard","toShop","handleGrid","faTh","faBars","toShopSize","FileUpload","onDrop","files","uploading","FormData","append","header","uploadedFiles","imagesHandler","onRemove","filter","public_id","showUploadingImages","e","multiple","faPlusCircle","textAlign","paddingTop","reset","AddProduct","shipping","available","publish","showlabel","updateField","resetFieldHandler","console","log","newFormData","submbitForm","ManageBrands","showCategoryItems","resetFieldsHandler","submtForm","MaageWoods","ManageCategories","ProductNfo","detail","faTruck","faCheck","faTimes","showProductTags","addCart","showProductActions","showProductSpecifications","ImageLightBox","lightboxIsOpen","currentImage","pos","closeLightBox","onClose","gotoPrevious","gotoNext","isOpen","onClickPrev","onClickNext","src","ProductImg","lightBox","imagePos","lightBoxImages","showThumbs","handleLightBox","handleLightBoxClose","ProductPage","getBack","addToCartHandler","match","params","getProduct","productDetails","width","UserProductBlock","cartDetail","Paypal","total","toPay","env","client","sandbox","production","currency","onError","onSuccess","payment","onCancel","shape","UserCart","showTotal","showSuccess","caculateTotal","removeFromCart","k","showNoItemmessage","faFrown","transactionError","transactionCancel","transactionSuccess","paymentData","successBuy","cartItems","userCart","getCartItems","faSmile","UpdatepersonalNfo","updateUser","UpdateProfile","UpdateSiteNfo","updateSiteSuccess","ManageSite","NotFound","faExclamation","AddFile","showFileList","clear","ResetUser","formSucces","ResetPass","resetToken","formErrorMessage","token","Routes","Switch","Route","path","exact","Auth","rootReducer","combineReducers","action","register","siteNfo","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.d8e47911.chunk.js","sourcesContent":["import React from \"react\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faShoppingBag from \"@fortawesome/fontawesome-free-solid/faShoppingBag\";\nimport { Link } from \"react-router-dom\";\n\nconst MyButton = (props) => {\n    const buttons = () => {\n        let template = \"\";\n        switch (props.type) {\n            case \"default\":\n                template = (\n                    <Link\n                        className={!props.altClass ? \"link_default\" : props.altClass}\n                        to={props.linkTo}\n                        {...props.addStyles}\n                    >\n                        {props.title}\n                    </Link>\n                );\n                break;\n            case \"tag_link\":\n                template = (\n                    <div className=\"bag_link\" onClick={() => props.runAction()}>\n                        <FontAwesomeIcon icon={faShoppingBag} />\n                    </div>\n                );\n                break;\n            case \"add_to_cart_link\":\n                template = (\n                    <div className=\"add_to_cart_link\" onClick={() => props.runAction()}>\n                        <FontAwesomeIcon icon={faShoppingBag} />\n                        Add to Cart\n                    </div>\n                );\n                break;\n            default:\n                template = \"\";\n        }\n        return template;\n    };\n    return <div className=\"my_link\">{buttons()}</div>;\n};\n\nexport default MyButton;\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport MyButton from \"../utils/button\";\n\nconst HomeSlider = () => {\n    const sliders = [\n        {\n            img: \"/images/featured/featured_home.jpg\",\n            lineOne: \"Fender\",\n            lineTwo: \"Custom shop\",\n            linkTitle: \"Shop now\",\n            linkTo: \"/shop\",\n        },\n        {\n            img: \"/images/featured/featured_home_2.jpg\",\n            lineOne: \"B-Stock\",\n            lineTwo: \"Awesome discounts\",\n            linkTitle: \"View offers\",\n            linkTo: \"/shop\",\n        },\n    ];\n\n    const settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidersToShow: 1,\n        slidersToScroll: 1,\n        arrows: false,\n    };\n\n    const generateSlides = () =>\n        sliders\n            ? sliders.map((item, i) => (\n                  <div key={i}>\n                      <div\n                          className=\"featured_image\"\n                          style={{\n                              background: `url(${item.img})`,\n                              height: `${window.innerHeight}px`,\n                          }}\n                      >\n                          <div className=\"featured_action\">\n                              <div className=\"tag title\">{item.lineOne}</div>\n                              <div className=\"tag title\">{item.lineTwo}</div>\n                              <MyButton\n                                  type=\"default\"\n                                  title={item.linkTitle}\n                                  linkTo={item.linkTo}\n                                  addStyles={{\n                                      margin: \"10px 0 0 0\",\n                                  }}\n                              />\n                          </div>\n                      </div>\n                  </div>\n              ))\n            : null;\n\n    return (\n        <div className=\"featured_container\">\n            <Slider {...settings}>{generateSlides()}</Slider>\n        </div>\n    );\n};\n\nexport default HomeSlider;\n","import React from \"react\";\nimport MyButton from \"../utils/button\";\n\nconst HomePromotion = (props) => {\n    const promotion = {\n        img: \"/images/featured/featured_home_3.jpg\",\n        lineOne: \"Up to 40% off\",\n        lineTwo: \"In second hand guitars\",\n        linkTitle: \"Shop now\",\n        linkTo: \"/shop\",\n    };\n    const renderPromotion = () =>\n        promotion ? (\n            <div\n                className=\"home_promotion_img\"\n                style={{ background: `url(${promotion.img})` }}\n            >\n                <div className=\"featured_action\">\n                    <div className=\"tag title\">{promotion.lineOne}</div>\n                    <div className=\"tag title\">{promotion.lineTwo}</div>\n                    <MyButton\n                        type=\"default\"\n                        title={promotion.linkTitle}\n                        linkTo={promotion.linkTo}\n                        addStyles={{\n                            margin: \"10px 0 0 0\",\n                        }}\n                    />\n                </div>\n            </div>\n        ) : null;\n    return <div className=\"home_promotion\">{renderPromotion()}</div>;\n};\n\nexport default HomePromotion;\n","import axios from \"axios\";\n\nimport { PRODUCT_SERVER } from \"../components/utils/misc\";\nimport {\n    GET_PRODUCTS_BY_SELL,\n    GET_PRODUCTS_BY_ARRIVAL,\n    GET_BRANDS,\n    GET_WOODS,\n    GET_PRODUCTS_TO_SHOP,\n    ADD_PRODUCT,\n    ADD_BRAND,\n    ADD_WOOD,\n    GET_PRODUCT_DETAILS,\n    CLEAR_PRODUCT,\n    CLEAR_PRODUCT_DETAILS,\n} from \"./types\";\n\nexport function getProductsBySell() {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/articles?sortBy=sold&order=desc&limit=4`)\n        .then((response) => response.data.products);\n    return {\n        type: GET_PRODUCTS_BY_SELL,\n        payload: request,\n    };\n}\n\nexport function getProductsByArrival() {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/articles?sortBy=createdAt&order=desc&limit=4`)\n        .then((response) => response.data.products);\n    return {\n        type: GET_PRODUCTS_BY_ARRIVAL,\n        payload: request,\n    };\n}\n\nexport function getBrands() {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/brands`)\n        .then((response) => response.data.brands);\n    return {\n        type: GET_BRANDS,\n        payload: request,\n    };\n}\n\nexport function getWoods() {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/woods`)\n        .then((response) => response.data.woods);\n    return {\n        type: GET_WOODS,\n        payload: request,\n    };\n}\n\nexport function getProductsToShop(skip, limit, filters = [], previousState = []) {\n    const data = {\n        limit,\n        skip,\n        filters,\n    };\n    const request = axios.post(`${PRODUCT_SERVER}/shop`, data).then((response) => {\n        let newState = [...previousState, ...response.data.articles];\n\n        return {\n            size: response.data.size,\n            articles: newState,\n        };\n    });\n    return {\n        type: GET_PRODUCTS_TO_SHOP,\n        payload: request,\n    };\n}\n\nexport function addProduct(dataToSubmit) {\n    const request = axios\n        .post(`${PRODUCT_SERVER}/article`, dataToSubmit)\n        .then((response) => response.data);\n    return {\n        type: ADD_PRODUCT,\n        payload: request,\n    };\n}\n\nexport function clearProduct() {\n    return {\n        type: CLEAR_PRODUCT,\n        payload: \"\",\n    };\n}\n\nexport function addBrand(dataToSubmit, existingBrands) {\n    const request = axios\n        .post(`${PRODUCT_SERVER}/brand`, dataToSubmit)\n        .then((response) => {\n            let brands = [...existingBrands, response.data.brand];\n            return {\n                success: response.data.success,\n                brands,\n            };\n        });\n    return {\n        type: ADD_BRAND,\n        payload: request,\n    };\n}\n\nexport function addWood(dataToSubmit, existingWoods) {\n    const request = axios\n        .post(`${PRODUCT_SERVER}/wood`, dataToSubmit)\n        .then((response) => {\n            let woods = [...existingWoods, response.data.wood];\n            return {\n                success: response.data.success,\n                woods,\n            };\n        });\n    return {\n        type: ADD_WOOD,\n        payload: request,\n    };\n}\n\nexport function getProduct(id) {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/article_by_id?id=${id}&type=single`)\n        .then((response) => {\n            return response.data.product[0];\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    return {\n        type: GET_PRODUCT_DETAILS,\n        payload: request,\n    };\n}\n\nexport function clearProductDetails() {\n    return {\n        type: CLEAR_PRODUCT_DETAILS,\n        payload: \"\",\n    };\n}\n","export const AUTH_USER = \"auth_user\";\nexport const ADD_TO_CART = \"add_to_cart\";\nexport const REGISTER_USER = \"register_user\";\nexport const LOGIN_USER = \"login_user\";\nexport const LOGOUT_USER = \"logout_user\";\nexport const GET_CART_ITEMS_USER = \"get_cart_items_user\";\nexport const REMOVE_ITEM_FROM_CART = \"remove_item_from_cart\";\nexport const ON_SUCCESS_BUY_USER = \"on_success_buy_user\";\nexport const UPDATE_DATA = \"update_data\";\nexport const CLEAR_UPDATE_USER = \"clear_update_user\";\n\nexport const ADD_PRODUCT = \"add_product\";\nexport const CLEAR_PRODUCT = \"clear_product\";\nexport const CLEAR_PRODUCT_DETAILS = \"clear_product_details\";\nexport const GET_PRODUCTS_BY_ARRIVAL = \"get_products_by_arrival\";\nexport const GET_PRODUCTS_BY_SELL = \"get_products_by_sell\";\nexport const GET_PRODUCTS_TO_SHOP = \"get_products_to_shop\";\nexport const GET_PRODUCT_DETAILS = \"get_product_details\";\n\nexport const ADD_BRAND = \"add_brand\";\nexport const GET_BRANDS = \"get_brands\";\n\nexport const ADD_WOOD = \"add_wood\";\nexport const GET_WOODS = \"get_woods\";\n\nexport const GET_SITE_DATA = \"get_site_data\";\nexport const UPDATE_SITE_DATA = \"update_site_data\";\n","// SERVER ROUTES\nexport const USER_SERVER = \"/api/user\";\nexport const PRODUCT_SERVER = \"/api/product\";\nexport const SITE_SERVER = \"/api/site\";\n","import axios from \"axios\";\n\nimport { USER_SERVER, PRODUCT_SERVER } from \"../components/utils/misc\";\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS_USER,\n    REMOVE_ITEM_FROM_CART,\n    ON_SUCCESS_BUY_USER,\n    UPDATE_DATA,\n    CLEAR_UPDATE_USER,\n} from \"./types\";\n\nexport function loginUser(dataToSubmit) {\n    const request = axios.post(`${USER_SERVER}/login`, dataToSubmit).then((response) => {\n        return response.data;\n    });\n    return {\n        type: LOGIN_USER,\n        payload: request,\n    };\n}\n\nexport function registerUser(dataToSubmit) {\n    const requset = axios\n        .post(`${USER_SERVER}/register`, dataToSubmit)\n        .then((response) => {\n            return response.data;\n        });\n    return {\n        type: REGISTER_USER,\n        payload: requset,\n    };\n}\n\nexport function auth() {\n    const request = axios.get(`${USER_SERVER}/auth`).then((response) => {\n        return response.data;\n    });\n    return {\n        type: AUTH_USER,\n        payload: request,\n    };\n}\n\nexport function logoutUser() {\n    const request = axios.get(`${USER_SERVER}/logout`).then((response) => {\n        return response.data;\n    });\n    return {\n        type: LOGOUT_USER,\n        payload: request,\n    };\n}\n\nexport function addToCart(_id) {\n    const request = axios.post(`${USER_SERVER}/add-to-cart`, { _id }).then((response) => {\n        return response.data;\n    });\n    return {\n        type: ADD_TO_CART,\n        payload: request,\n    };\n}\n\nexport function getCartItems(cartItems, userCart) {\n    const request = axios\n        .get(`${PRODUCT_SERVER}/article_by_id?id=${cartItems}&type=array`)\n        .then((response) => {\n            userCart.forEach((item) => {\n                response.data.product.forEach((k, i) => {\n                    if (item._id === k._id) {\n                        response.data.product[i].quantity = item.quantity;\n                    }\n                });\n            });\n            return response.data;\n        });\n\n    return {\n        type: GET_CART_ITEMS_USER,\n        payload: request,\n    };\n}\n\nexport function removeItem(_id) {\n    const request = axios\n        .post(`${USER_SERVER}/remove-from-cart`, { _id })\n        .then((response) => {\n            return response.data;\n        });\n    return {\n        type: REMOVE_ITEM_FROM_CART,\n        payload: request,\n    };\n}\n\nexport function onSuccessBuy(data) {\n    const request = axios.post(`${USER_SERVER}/success-buy`, data).then((response) => {\n        return response.data;\n    });\n\n    return {\n        type: ON_SUCCESS_BUY_USER,\n        payload: request,\n    };\n}\n\nexport function updateData(dataToSubmit) {\n    const request = axios\n        .post(`${USER_SERVER}/update-profile`, dataToSubmit)\n        .then((response) => {\n            return response.data;\n        });\n    return {\n        type: UPDATE_DATA,\n        payload: request,\n    };\n}\n\nexport function clearUpdateUser() {\n    return {\n        type: CLEAR_UPDATE_USER,\n        payload: \"\",\n    };\n}\n","import React, { Component } from \"react\";\nimport MyButton from \"./button\";\n\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../actions/user_actions\";\nclass Card extends Component {\n    renderCardImage = (images) => {\n        if (images.length > 0) {\n            return images[0].url;\n        } else {\n            return \"/images/image_not_availble.png\";\n        }\n    };\n    render() {\n        const props = this.props;\n        return (\n            <div className={`card_item_wrapper ${props.grid}`}>\n                <div\n                    className=\"image\"\n                    style={{\n                        background: `url(${this.renderCardImage(\n                            props.images\n                        )}) no-repeat`,\n                    }}\n                ></div>\n                <div className=\"action_container\">\n                    <div className=\"tags\">\n                        <div className=\"brand\">{props.brand.name}</div>\n                        <div className=\"name\">{props.name}</div>\n                        <div className=\"name\">${props.price}</div>\n                    </div>\n\n                    {props.grid ? (\n                        <div className=\"description\">\n                            <p>{props.description}</p>\n                        </div>\n                    ) : null}\n                    <div className=\"actions\">\n                        <div className=\"button_wrapp\">\n                            <MyButton\n                                type=\"default\"\n                                altClass=\"card_link\"\n                                title=\"View product\"\n                                linkTo={`/product-details/${props._id}`}\n                                addStyles={{ margin: \"10px 0 0 0\" }}\n                            />\n                        </div>\n                        <div className=\"button_wrapp\">\n                            <MyButton\n                                type=\"tag_link\"\n                                runAction={() =>\n                                    props.user.userData.isAuth\n                                        ? this.props.dispatch(addToCart(props._id))\n                                        : props.history.push(\"/register-login\")\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(Card);\n","import React from \"react\";\nimport Card from \"./card\";\n\nconst CardBlock = (props) => {\n    const renderCard = () =>\n        props.list ? props.list.map((card, i) => <Card key={i} {...card} />) : null;\n    return (\n        <div className=\"card_block\">\n            <div className=\"container\">\n                {props.title ? <div className=\"title\">{props.title}</div> : null}\n            </div>\n            <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                {renderCard(props.list)}\n            </div>\n        </div>\n    );\n};\n\nexport default CardBlock;\n","import React, { Component } from \"react\";\nimport HomeSlider from \"./home_slider\";\nimport HomePromotion from \"./home_promotion\";\n\nimport { connect } from \"react-redux\";\nimport { getProductsBySell, getProductsByArrival } from \"../../actions/products_actions\";\nimport CardBlock from \"../utils/card_block\";\n\nclass Home extends Component {\n    componentDidMount() {\n        this.props.dispatch(getProductsBySell());\n        this.props.dispatch(getProductsByArrival());\n    }\n\n    render() {\n        // console.log(this.props.products);\n        return (\n            <div>\n                <HomeSlider />\n                <CardBlock\n                    list={this.props.products.bySell}\n                    title=\"Best Selling Guitars\"\n                />\n                <HomePromotion />\n                <CardBlock list={this.props.products.byArrival} title=\"New Arrivals\" />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(Home);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../../actions/user_actions\";\nclass Header extends Component {\n    state = {\n        page: [\n            {\n                name: \"Home\",\n                linkTo: \"/\",\n                public: true,\n            },\n            {\n                name: \"Guitars\",\n                linkTo: \"/shop\",\n                public: true,\n            },\n        ],\n        user: [\n            {\n                name: \"My Cart\",\n                linkTo: \"/user/cart\",\n                public: false,\n            },\n            {\n                name: \"My Account\",\n                linkTo: \"/user/dashboard\",\n                public: false,\n            },\n            {\n                name: \"Log in\",\n                linkTo: \"/register-login\",\n                public: true,\n            },\n            {\n                name: \"Log out\",\n                linkTo: \"/user/logout\",\n                public: false,\n            },\n        ],\n    };\n\n    logOuthandle = () => {\n        this.props.dispatch(logoutUser()).then((response) => {\n            if (response.payload.success) {\n                this.props.history.push(\"/\");\n            }\n        });\n    };\n    defaultLink = (item, i) =>\n        item.name === \"Log out\" ? (\n            <div className=\"log_out_link\" key={i} onClick={() => this.logOuthandle()}>\n                {item.name}\n            </div>\n        ) : (\n            <Link to={item.linkTo} key={i}>\n                {item.name}\n            </Link>\n        );\n\n    cartLink = (item, i) => {\n        const user = this.props.user.userData;\n        return (\n            <div className=\"cart_link\" key={i}>\n                <span>{user.cart ? user.cart.length : 0}</span>\n                <Link to={item.linkTo}>{item.name}</Link>\n            </div>\n        );\n    };\n\n    showLinks = (type) => {\n        let list = [];\n        if (this.props.user.userData) {\n            type.forEach((item) => {\n                if (!this.props.user.userData.isAuth) {\n                    if (item.public === true) {\n                        list.push(item);\n                    }\n                } else {\n                    if (item.name !== \"Log in\") {\n                        list.push(item);\n                    }\n                }\n            });\n        }\n        return list.map((item, i) => {\n            if (item.name !== \"My Cart\") {\n                return this.defaultLink(item, i);\n            } else {\n                return this.cartLink(item, i);\n            }\n        });\n    };\n\n    render() {\n        return (\n            <header className=\"bck_b_light\">\n                <div className=\"container\">\n                    <div className=\"left\">\n                        <div className=\"logo\">WAVES</div>\n                    </div>\n                    <div className=\"right\">\n                        <div className=\"top\">{this.showLinks(this.state.user)}</div>\n                        <div className=\"bottom\">{this.showLinks(this.state.page)}</div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));\n","import React from \"react\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faCompass from \"@fortawesome/fontawesome-free-solid/faCompass\";\nimport faPhone from \"@fortawesome/fontawesome-free-solid/faPhone\";\nimport faClock from \"@fortawesome/fontawesome-free-solid/faClock\";\nimport faEnvelope from \"@fortawesome/fontawesome-free-solid/faEnvelope\";\n\nconst Footer = ({ site }) => {\n    return site.siteData ? (\n        <footer className=\"bck_b_dark\">\n            <div className=\"container\">\n                <div className=\"logo\">WAVES</div>\n                <div className=\"wrapper\">\n                    <div className=\"left\">\n                        <h2>Contact information</h2>\n                        <div className=\"business_nfo\">\n                            <div className=\"tag\">\n                                <FontAwesomeIcon icon={faCompass} className=\"icon\" />\n                                <div className=\"nfo\">\n                                    <div>Address</div>\n                                    <div>{site.siteData[0].address}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon icon={faPhone} className=\"icon\" />\n                                <div className=\"nfo\">\n                                    <div>Phone</div>\n                                    <div>{site.siteData[0].phone}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon icon={faClock} className=\"icon\" />\n                                <div className=\"nfo\">\n                                    <div>Working hours</div>\n                                    <div>{site.siteData[0].hours}</div>\n                                </div>\n                            </div>\n                            <div className=\"tag\">\n                                <FontAwesomeIcon icon={faEnvelope} className=\"icon\" />\n                                <div className=\"nfo\">\n                                    <div>Email</div>\n                                    <div>{site.siteData[0].email}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"left\">\n                        <h2>Be the first to know</h2>\n                        <div>\n                            <div>\n                                Get all the lastest information on events, sales and\n                                offers. You can miss out.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    ) : null;\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\nimport { GET_SITE_DATA, UPDATE_SITE_DATA } from \"./types\";\n\nimport { SITE_SERVER } from \"../components/utils/misc\";\n\nexport function getSiteData() {\n    const request = axios.get(`${SITE_SERVER}/site-data`).then((response) => {\n        return response.data;\n    });\n    return {\n        type: GET_SITE_DATA,\n        payload: request,\n    };\n}\n\nexport function updateSiteNfo(dataToSubmit) {\n    const request = axios\n        .post(`${SITE_SERVER}/site-data`, dataToSubmit)\n        .then((response) => {\n            return response.data;\n        });\n    return {\n        type: UPDATE_SITE_DATA,\n        payload: request,\n    };\n}\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header_footer/Header\";\nimport Footer from \"../components/Header_footer/Footer\";\n\nimport { connect } from \"react-redux\";\nimport { getSiteData } from \"../actions/site_actions\";\n\nclass Layout extends Component {\n    componentDidMount() {\n        this.props.dispatch(getSiteData());\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <div className=\"page_container\">{this.props.children}</div>\n                <Footer site={this.props.site} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        site: state.site,\n    };\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React from \"react\";\n\nconst FormField = ({ formdata, change, id }) => {\n    const showError = () => {\n        let errorMessage = null;\n        if (formdata.validation && !formdata.valid) {\n            // state of valid = false\n            errorMessage = (\n                <div className=\"error_label\">{formdata.validationMessage}</div>\n            );\n        }\n        return errorMessage;\n    };\n\n    const renderTemplate = () => {\n        let formTemplate = null;\n        switch (formdata.element) {\n            case \"input\":\n                formTemplate = (\n                    <div className=\"formBlock\">\n                        {formdata.showLabel ? (\n                            <div className=\"label_inputs\">{formdata.config.label}</div>\n                        ) : null}\n                        <input\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event) => change({ event, id, blur: true })}\n                            onChange={(event) => change({ event, id })}\n                        />\n                        {showError()}\n                    </div>\n                );\n                break;\n            case \"textarea\":\n                formTemplate = (\n                    <div className=\"formBlock\">\n                        {formdata.showLabel ? (\n                            <div className=\"label_inputs\">{formdata.config.label}</div>\n                        ) : null}\n                        <textarea\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event) => change({ event, id, blur: true })}\n                            onChange={(event) => change({ event, id })}\n                        />\n                        {showError()}\n                    </div>\n                );\n                break;\n            case \"select\":\n                formTemplate = (\n                    <div className=\"formBlock\">\n                        {formdata.showLabel ? (\n                            <div className=\"label_inputs\">{formdata.config.label}</div>\n                        ) : null}\n                        <select\n                            value={formdata.value}\n                            onBlur={(event) => change({ event, id, blur: true })}\n                            onChange={(event) => change({ event, id })}\n                        >\n                            <option value=\"\">Select one</option>\n                            {formdata.config.options.map((item, i) => (\n                                <option value={item.key} key={i}>\n                                    {item.value}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                );\n                break;\n            default:\n                formTemplate = null;\n        }\n        return formTemplate;\n    };\n\n    return <div>{renderTemplate()}</div>;\n};\n\nexport default FormField;\n","export const validate = (element, formdata = []) => {\n    let error = [true, \"\"];\n\n    if (element.validation.email) {\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value);\n        const message = `${!valid ? \"Must be a valid email\" : \"\"}`;\n        error = !valid ? [valid, message] : error;\n    }\n\n    if (element.validation.confirm) {\n        const valid = element.value.trim() === formdata[element.validation.confirm].value;\n        const message = `${!valid ? \"Password do not match\" : \"\"}`;\n        error = !valid ? [valid, message] : error;\n    }\n\n    if (element.validation.required) {\n        const valid = element.value.trim() !== \"\"; // Result true when value != ''\n        const message = `${!valid ? \"This field required.\" : \"\"}`;\n        error = !valid ? [valid, message] : error;\n    }\n\n    return error;\n};\n\nexport const update = (element, formdata, formName) => {\n    const newFormdata = { ...formdata };\n    const newElement = { ...newFormdata[element.id] };\n    newElement.value = element.event.target.value;\n    if (element.blur) {\n        let validData = validate(newElement, formdata);\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1];\n    }\n    newElement.touched = element.blur;\n\n    newFormdata[element.id] = newElement;\n    return newFormdata;\n};\n\nexport const generateData = (formdata, formName) => {\n    let dataToSubmit = {};\n    for (let key in formdata) {\n        if (key !== \"confirmPassword\") {\n            dataToSubmit[key] = formdata[key].value;\n        }\n    }\n    return dataToSubmit;\n};\n\nexport const isFormValid = (formdata, formName) => {\n    let formIsValid = true;\n    for (let key in formdata) {\n        formIsValid = formdata[key].valid && formIsValid;\n    }\n    return formIsValid;\n};\n\nexport const populateOptionFields = (formdata, array = [], field) => {\n    const newArray = [];\n    const newFormdata = { ...formdata };\n    array.forEach((item) => {\n        newArray.push({ key: item._id, value: item.name });\n    });\n    newFormdata[field].config.options = newArray;\n    return newFormdata;\n};\n\nexport const resetFields = (formdata, formname) => {\n    const newFormdata = { ...formdata };\n    for (let key in newFormdata) {\n        if (key === \"images\") {\n            newFormdata[key].value = [];\n        } else {\n            newFormdata[key].value = \"\";\n        }\n        newFormdata[key].value = \"\";\n        newFormdata[key].valid = false;\n        newFormdata[key].touched = false;\n        newFormdata[key].validationMessage = \"\";\n    }\n    return newFormdata;\n};\n\nexport const populateFields = (formData, fiels) => {\n    for (let key in formData) {\n        formData[key].value = fiels[key];\n        formData[key].valid = true;\n        formData[key].touched = true;\n        formData[key].validationMessage = \"\";\n    }\n    return formData;\n};\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport FormField from \"../utils/Form/formField\";\nimport { update, generateData, isFormValid } from \"../utils/Form/formAction\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/user_actions\";\n\nclass Login extends Component {\n    state = {\n        formError: false,\n        formSuccess: \"\",\n        formdata: {\n            email: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"email_input\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                },\n                validation: {\n                    required: true,\n                    email: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            password: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"password_input\",\n                    type: \"password\",\n                    placeholder: \"Enter your password\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n        },\n    };\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"login\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n    /**\n     *\n     * @param {event} event\n     */\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"login\");\n        let formIsValid = isFormValid(this.state.formdata, \"login\");\n        if (formIsValid) {\n            this.props.dispatch(loginUser(dataToSubmit)).then((response) => {\n                if (response.payload.loginSuccess) {\n                    // console.log(response.payload);\n                    this.props.history.push(\"/user/dashboard\");\n                } else {\n                    this.setState({\n                        formError: true,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"signin_wrapper\">\n                <form onSubmit={(event) => this.submitForm(event)}>\n                    <FormField\n                        id={\"email\"}\n                        formdata={this.state.formdata.email}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    <FormField\n                        id={\"password\"}\n                        formdata={this.state.formdata.password}\n                        change={(element) => this.updateForm(element)}\n                    />\n\n                    {this.state.formError ? (\n                        <div className=\"error_label\">Please check your data</div>\n                    ) : null}\n                    <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                        Login\n                    </button>\n                    <button\n                        style={{ marginLeft: \"10px\" }}\n                        onClick={() => this.props.history.push(\"reset-user\")}\n                    >\n                        Forgot password\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(Login));\n","import React from \"react\";\nimport MyButton from \"../utils/button\";\nimport Login from \"./login\";\n\nconst RegisterLogin = () => {\n    return (\n        <div className=\"page_wrapper\">\n            <div className=\"container\">\n                <div className=\"register_login_container\">\n                    <div className=\"left\">\n                        <h1>New Customers</h1>\n                        <p>\n                            Lorem ipsum dolor sit amet consectetur adipisicing\n                            elit. Quasi ratione animi, blanditiis fugit ex nemo\n                            voluptate maiores impedit veniam! Nobis nulla\n                            nostrum nesciunt eos mollitia minus corrupti\n                            distinctio voluptas eius.\n                        </p>\n                        <MyButton\n                            type=\"default\"\n                            title=\"Create an account\"\n                            linkTo=\"/register\"\n                            addStyles={{ margin: \"10px 0 0 0\" }}\n                        />\n                    </div>\n                    <div className=\"right\">\n                        <h2>Register customers</h2>\n                        <p>If you have an account please log in.</p>\n                        <Login />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterLogin;\n","import React, { Component } from \"react\";\nimport FormField from \"../utils/Form/formField\";\nimport { update, generateData, isFormValid } from \"../utils/Form/formAction\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/user_actions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nclass Register extends Component {\n    state = {\n        formError: false,\n        formSuccess: false,\n        formdata: {\n            name: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"name_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your name\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            lastname: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"lastname_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your lastname\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            email: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"email_input\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                },\n                validation: {\n                    required: true,\n                    email: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            password: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"password_input\",\n                    type: \"password\",\n                    placeholder: \"Enter your password\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            confirmPassword: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"confirm_password_input\",\n                    type: \"password\",\n                    placeholder: \"Confirm your password\",\n                },\n                validation: {\n                    required: true,\n                    confirm: \"password\",\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n        },\n    };\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"register\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"register\");\n        let formIsValid = isFormValid(this.state.formdata, \"register\");\n        if (formIsValid) {\n            this.props\n                .dispatch(registerUser(dataToSubmit))\n                .then((response) => {\n                    if (response.payload.success) {\n                        // TODO something\n                        this.setState({\n                            formError: false,\n                            formSuccess: true,\n                        });\n                        setTimeout(() => {\n                            this.props.history.push(\"/register-login\");\n                        }, 3000);\n                    } else {\n                        this.setState({\n                            formError: true,\n                        });\n                    }\n                })\n                .catch((err) => {\n                    this.setState({\n                        formError: true,\n                    });\n                });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n    render() {\n        return (\n            <div className=\"page_wrapper\">\n                <div className=\"container\">\n                    <div className=\"register_login_container\">\n                        <div className=\"left\">\n                            <form onSubmit={(event) => this.submitForm(event)}>\n                                <h2>Personnal information</h2>\n                                <div className=\"form_block_two\">\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={\"name\"}\n                                            formdata={this.state.formdata.name}\n                                            change={(element) => this.updateForm(element)}\n                                        />\n                                    </div>\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={\"lastname\"}\n                                            formdata={this.state.formdata.lastname}\n                                            change={(element) => this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <FormField\n                                        id={\"email\"}\n                                        formdata={this.state.formdata.email}\n                                        change={(element) => this.updateForm(element)}\n                                    />\n                                </div>\n                                <h2>Verify password</h2>\n                                <div className=\"form_block_two\">\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={\"password\"}\n                                            formdata={this.state.formdata.password}\n                                            change={(element) => this.updateForm(element)}\n                                        />\n                                    </div>\n                                    <div className=\"block\">\n                                        <FormField\n                                            id={\"confirmPassword\"}\n                                            formdata={this.state.formdata.confirmPassword}\n                                            change={(element) => this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                {this.state.formError ? (\n                                    <div className=\"error_label\">\n                                        Please check your data\n                                    </div>\n                                ) : null}\n                                <button\n                                    type=\"submit\"\n                                    onClick={(event) => this.submitForm(event)}\n                                >\n                                    Create an account\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.formSuccess}>\n                    <div className=\"dialog_alert\">\n                        <div>Congratulations !!</div>\n                        <div>\n                            You will be redirected to the LOGIN in a couple seconds...\n                        </div>\n                    </div>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default connect()(Register);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst links = [\n    {\n        name: \"My account\",\n        linkTo: \"/user/dashboard\",\n    },\n    {\n        name: \"Uer information\",\n        linkTo: \"/user/user-profile\",\n    },\n    {\n        name: \"My Cart\",\n        linkTo: \"/user/cart\",\n    },\n];\n\nconst linksAdmin = [\n    {\n        name: \"Site info\",\n        linkTo: \"/admin/site-nfo\",\n    },\n    {\n        name: \"Add products\",\n        linkTo: \"/admin/add-product\",\n    },\n    {\n        name: \"Manage categories\",\n        linkTo: \"/admin/manage-categories\",\n    },\n    {\n        name: \"Upload file\",\n        linkTo: \"/admin/add-file\",\n    },\n];\n\nconst UserLayout = (props) => {\n    const generateLinks = (links) =>\n        links.map((item, i) => (\n            <Link key={i} to={item.linkTo}>\n                {item.name}\n            </Link>\n        ));\n    const generateLinksAdmin = (links) =>\n        links.map((item, i) => (\n            <Link key={i} to={item.linkTo}>\n                {item.name}\n            </Link>\n        ));\n    const adminLink = () => {\n        return (\n            <div>\n                <h2>Admin</h2>\n                <div className=\"links\">{generateLinksAdmin(linksAdmin)}</div>\n            </div>\n        );\n    };\n    return (\n        <div className=\"container\">\n            <div className=\"user_container\">\n                <div className=\"user_left_nav\">\n                    <h2>My account</h2>\n                    <div className=\"links\">{generateLinks(links)}</div>\n                    {props.user.userData.isAdmin ? adminLink() : null}\n                </div>\n                <div className=\"user_right\">{props.children}</div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n    };\n};\n\nexport default connect(mapStateToProps)(UserLayout);\n","import React from \"react\";\nimport moment from \"moment\";\n\n// moment(product.dateOfpurchase).format(\"DD-MM-YYYY\")\n\nconst UserHistoryBlock = (props) => {\n    const renderBlocks = () =>\n        props.products\n            ? props.products.map((product, i) => (\n                  <tr key={i}>\n                      <td>{product.poder}</td>\n                      <td>\n                          {product.brand} {product.name}\n                      </td>\n                      <td>$ {product.price}</td>\n                      <td>{product.quantity}</td>\n                  </tr>\n              ))\n            : null;\n    return (\n        <div className=\"history_blocks\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Order number</th>\n                        <th>Product</th>\n                        <th>Price paid</th>\n                        <th>Quantity</th>\n                    </tr>\n                </thead>\n                <tbody>{renderBlocks()}</tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default UserHistoryBlock;\n","import React from \"react\";\nimport UserLayout from \"../../HOC/user\";\nimport MyButton from \"../utils/button\";\nimport UserHistoryBlock from \"../utils/User/history_block\";\n\nconst UserDashboard = ({ user }) => {\n    return (\n        <UserLayout>\n            <div>\n                <div className=\"user_nfo_panel\">\n                    <h1>User infomation</h1>\n                    <div>\n                        <span>name: {user.userData.name}</span>\n                        <span>lastname: {user.userData.lastname}</span>\n                        <span>email: {user.userData.email}</span>\n                    </div>\n                    <MyButton\n                        type=\"default\"\n                        title=\"Edit account info\"\n                        linkTo=\"/user/user-profile\"\n                    />\n                </div>\n                {user.userData.history ? (\n                    <div className=\"user_nfo_panel\">\n                        <h1>History purchases</h1>\n                        <div className=\"user_product_block_wrapper\">\n                            <UserHistoryBlock products={user.userData.history} />\n                        </div>\n                    </div>\n                ) : null}\n            </div>\n        </UserLayout>\n    );\n};\n\nexport default UserDashboard;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { auth } from \"../actions/user_actions\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    class AuthenticationCheck extends Component {\n        state = {\n            loading: true,\n        };\n        componentDidMount() {\n            this.props.dispatch(auth()).then((response) => {\n                let user = this.props.user.userData;\n                if (!user.isAuth) {\n                    // Not login\n                    if (reload) {\n                        // Private Route\n                        this.props.history.push(\"/register-login\");\n                    }\n                } else {\n                    // Do login\n                    if (adminRoute && !user.isAdmin) {\n                        this.props.history.push(\"/user/dashboard\");\n                    } else {\n                        if (reload === false) {\n                            // Public Route\n                            this.props.history.push(\"/user/dashboard\");\n                        }\n                    }\n                }\n                this.setState({\n                    loading: false,\n                });\n            });\n        }\n\n        render() {\n            if (this.state.loading) {\n                return (\n                    <div className=\"main_loader\">\n                        <CircularProgress style={{ color: \"#2196f3\" }} thickness={7} />\n                    </div>\n                );\n            }\n            return <ComposedClass {...this.props} user={this.props.user} />;\n        }\n    }\n    function mapStateToProps(state) {\n        return {\n            user: state.user,\n        };\n    }\n    return connect(mapStateToProps)(AuthenticationCheck);\n}\n","import React from \"react\";\n\nconst PageTop = (props) => {\n    return (\n        <div className=\"page_top\">\n            <div className=\"container\">{props.title}</div>\n        </div>\n    );\n};\n\nexport default PageTop;\n","import React, { Component } from \"react\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faAngleDown from \"@fortawesome/fontawesome-free-solid/faAngleDown\";\nimport faAngleUp from \"@fortawesome/fontawesome-free-solid/faAngleUp\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nclass CollapseCheckbox extends Component {\n    state = {\n        open: false,\n        checked: [],\n    };\n\n    componentDidMount() {\n        if (this.props.initState) {\n            this.setState({\n                open: this.props.initState,\n            });\n        }\n    }\n\n    handeleClick = () => {\n        // console.log(this.state.open);\n        this.setState({\n            open: !this.state.open,\n        });\n    };\n\n    handeleAngle = () => {\n        return this.state.open ? (\n            <FontAwesomeIcon icon={faAngleUp}></FontAwesomeIcon>\n        ) : (\n            <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\n        );\n    };\n\n    renderList = () =>\n        this.props.list\n            ? this.props.list.map((value) => (\n                  <ListItem key={value._id} style={{ paddig: \"10px 0\" }}>\n                      <ListItemText primary={value.name} />\n                      <ListItemSecondaryAction>\n                          <Checkbox\n                              color=\"primary\"\n                              onChange={() => this.handleToggle(value._id)}\n                              checked={this.state.checked.indexOf(value._id) !== -1}\n                          />\n                      </ListItemSecondaryAction>\n                  </ListItem>\n              ))\n            : null;\n\n    handleToggle = (value) => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        this.setState(\n            {\n                checked: newChecked,\n            },\n            () => {\n                this.props.handleFilters(newChecked);\n            }\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"collapse_items_wrapper\">\n                <List style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                    <ListItem\n                        onClick={this.handeleClick}\n                        style={{ padding: \"10px 23px 10px 0\" }}\n                    >\n                        <ListItemText\n                            primary={this.props.title}\n                            className=\"collapse_title\"\n                        />\n                        {this.handeleAngle()}\n                    </ListItem>\n                    <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                        <List component=\"div\" disablePadding>\n                            {this.renderList()}\n                        </List>\n                    </Collapse>\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default CollapseCheckbox;\n","import React, { Component } from \"react\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faAngleDown from \"@fortawesome/fontawesome-free-solid/faAngleDown\";\nimport faAngleUp from \"@fortawesome/fontawesome-free-solid/faAngleUp\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { RadioGroup } from \"@material-ui/core\";\n\nclass CollapseRadio extends Component {\n    state = {\n        open: false,\n        value: \"0\",\n    };\n\n    componentDidMount() {\n        if (this.props.initState) {\n            this.setState({\n                open: this.props.initState,\n            });\n        }\n    }\n\n    handeleClick = () => {\n        // console.log(this.state.open);\n        this.setState({\n            open: !this.state.open,\n        });\n    };\n\n    handeleAngle = () => {\n        return this.state.open ? (\n            <FontAwesomeIcon icon={faAngleUp}></FontAwesomeIcon>\n        ) : (\n            <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\n        );\n    };\n\n    renderList = () => {\n        return this.props.list\n            ? this.props.list.map((value) => (\n                  <FormControlLabel\n                      key={value._id}\n                      value={`${value._id}`}\n                      control={<Radio />}\n                      label={value.name}\n                  />\n              ))\n            : null;\n    };\n\n    handleChange = (event) => {\n        this.props.handleFilters(event.target.value);\n        this.setState({\n            value: event.target.value,\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <List style={{ borderBottom: \"1px solid #dbdbdb\" }}>\n                    <ListItem\n                        onClick={this.handeleClick}\n                        style={{ padding: \"10px 23px 10px 0\" }}\n                    >\n                        <ListItemText\n                            primary={this.props.title}\n                            className=\"collapse_title\"\n                        />\n                        {this.handeleAngle()}\n                    </ListItem>\n                    <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n                        <RadioGroup\n                            aria-label=\"prices\"\n                            name=\"prices\"\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                        >\n                            {this.renderList()}\n                        </RadioGroup>\n                    </Collapse>\n                </List>\n            </div>\n        );\n    }\n}\n\nexport default CollapseRadio;\n","const frets = [\n    {\n        _id: 20,\n        name: 20,\n    },\n    {\n        _id: 21,\n        name: 21,\n    },\n    {\n        _id: 22,\n        name: 22,\n    },\n    {\n        _id: 24,\n        name: 24,\n    },\n];\n\nconst prices = [\n    { _id: 0, name: \"Any\", array: [] },\n    { _id: 1, name: \"$0 to $299\", array: [0, 299] },\n    { _id: 2, name: \"$299 to $599\", array: [299, 599] },\n    { _id: 3, name: \"$600 to $999\", array: [600, 999] },\n    { _id: 4, name: \"$1000 to $1999\", array: [1000, 1999] },\n    { _id: 5, name: \"More than $2000\", array: [2000, 1500000] },\n];\n\nexport { frets, prices };\n","import React from \"react\";\nimport Card from \"./card\";\nconst CardBlockShop = (props) => {\n    const renderCards = () =>\n        props.list\n            ? props.list.map((card) => (\n                  <Card key={card._id} {...card} grid={props.grid} />\n              ))\n            : null;\n    return (\n        <div className=\"card_block_shop\">\n            <div>\n                <div>\n                    {props.list ? (\n                        props.list.length === 0 ? (\n                            <div className=\"no_result\">Sorry no result</div>\n                        ) : null\n                    ) : null}\n                    {renderCards(props.list)}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CardBlockShop;\n","import React from \"react\";\nimport CardBlockShop from \"../utils/card_block_shop\";\n\nconst LoadMoreCard = (props) => {\n    return (\n        <div>\n            <div>\n                <CardBlockShop grid={props.grid} list={props.products} />\n            </div>\n            {props.size > 0 && props.size >= props.limit ? (\n                <div className=\"load_more_container\">\n                    <span onClick={() => props.loadMore()}>Load More</span>\n                </div>\n            ) : null}\n        </div>\n    );\n};\n\nexport default LoadMoreCard;\n","import React, { Component } from \"react\";\nimport PageTop from \"../utils/page_top\";\n\nimport { connect } from \"react-redux\";\nimport { getBrands, getWoods, getProductsToShop } from \"../../actions/products_actions\";\n\nimport CollapseCheckbox from \"../utils/collapseCheckbox\";\nimport CollapseRadio from \"../utils/collapseRadio\";\nimport { frets, prices } from \"../utils/Form/fixed_categories\";\nimport LoadMoreCard from \"./loadMoreCards\";\n\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faBars from \"@fortawesome/fontawesome-free-solid/faBars\";\nimport faTh from \"@fortawesome/fontawesome-free-solid/faTh\";\n\nclass Shop extends Component {\n    state = {\n        grid: \"\",\n        limit: 6,\n        skip: 0,\n        filters: {\n            brand: [],\n            frets: [],\n            wood: [],\n            price: [],\n        },\n    };\n    componentDidMount() {\n        this.props.dispatch(getBrands());\n        this.props.dispatch(getWoods());\n        this.props.dispatch(\n            getProductsToShop(this.state.skip, this.state.limit, this.state.filters)\n        );\n    }\n\n    handleFilters = (filters, category) => {\n        const newFilters = { ...this.state.filters };\n        if (category === \"price\") {\n            const newPrices = prices.find((i) => i._id === parseInt(filters, 10));\n            newFilters[category] = newPrices.array;\n        } else {\n            newFilters[category] = filters;\n        }\n        this.showFilteredResults(newFilters);\n        this.setState({\n            filters: newFilters,\n        });\n    };\n\n    showFilteredResults = (filters) => {\n        this.props.dispatch(getProductsToShop(0, this.state.limit, filters)).then(() => {\n            this.setState({\n                skip: 0,\n            });\n        });\n    };\n\n    loadMoreCard = () => {\n        let skip = this.state.skip + this.state.limit;\n        this.props\n            .dispatch(\n                getProductsToShop(\n                    skip,\n                    this.state.limit,\n                    this.state.filters,\n                    this.props.products.toShop\n                )\n            )\n            .then(() => {\n                this.setState({\n                    skip,\n                });\n            });\n    };\n\n    handleGrid = () => {\n        this.setState({\n            grid: !this.state.grid ? \"grid_bars\" : \"\",\n        });\n    };\n\n    render() {\n        // console.log(this.state.filters);\n        const { products } = this.props;\n        return (\n            <div>\n                <PageTop title=\"Browse Products\" />\n                <div className=\"container\">\n                    <div className=\"shop_wrapper\">\n                        <div className=\"left\">\n                            <CollapseCheckbox\n                                initState={true}\n                                title=\"Brands\"\n                                list={products.brands}\n                                handleFilters={(filters) =>\n                                    this.handleFilters(filters, \"brand\")\n                                }\n                            />\n                            <CollapseCheckbox\n                                initState={false}\n                                title=\"Frets\"\n                                list={frets}\n                                handleFilters={(filters) =>\n                                    this.handleFilters(filters, \"frets\")\n                                }\n                            />\n                            <CollapseCheckbox\n                                initState={true}\n                                title=\"Woods\"\n                                list={this.props.products.woods}\n                                handleFilters={(filters) =>\n                                    this.handleFilters(filters, \"wood\")\n                                }\n                            />\n                            <CollapseRadio\n                                initState={true}\n                                title=\"Price\"\n                                list={prices}\n                                handleFilters={(filters) =>\n                                    this.handleFilters(filters, \"price\")\n                                }\n                            />\n                        </div>\n                        <div className=\"right\">\n                            <div className=\"shop_options\">\n                                <div className=\"shop_grids clear\">\n                                    <div\n                                        className={`grid_btn ${\n                                            this.state.grid ? \"\" : \"active\"\n                                        } `}\n                                        onClick={() => this.handleGrid()}\n                                    >\n                                        <FontAwesomeIcon icon={faTh} />\n                                    </div>\n                                    <div\n                                        className={`grid_btn ${\n                                            !this.state.grid ? \"\" : \"active\"\n                                        } `}\n                                        onClick={() => this.handleGrid()}\n                                    >\n                                        <FontAwesomeIcon icon={faBars} />\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                <LoadMoreCard\n                                    grid={this.state.grid}\n                                    limit={this.state.limit}\n                                    size={products.toShopSize}\n                                    products={products.toShop}\n                                    loadMore={() => this.loadMoreCard()}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(Shop);\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faPlusCircle from \"@fortawesome/fontawesome-free-solid/faPlusCircle\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass FileUpload extends Component {\n    constructor() {\n        super();\n        this.state = {\n            uploadedFiles: [],\n            uploading: false,\n        };\n    }\n\n    onDrop = (files) => {\n        this.setState({\n            uploading: true,\n        });\n        let formData = new FormData();\n        const config = {\n            header: { \"content-type\": \"multipart/form-data\" },\n        };\n        formData.append(\"file\", files[0]);\n        axios.post(\"/api/user/uploadimage\", formData, config).then((response) => {\n            this.setState(\n                {\n                    uploading: false,\n                    uploadedFiles: [...this.state.uploadedFiles, response.data],\n                },\n                () => {\n                    this.props.imagesHandler(this.state.uploadedFiles);\n                }\n            );\n        });\n    };\n\n    onRemove = (id) => {\n        axios.get(`/api/user/removeimage?public_id=${id}`).then((response) => {\n            let images = this.state.uploadedFiles.filter((item) => item.public_id !== id);\n            this.setState(\n                {\n                    uploadedFiles: images,\n                },\n                () => this.props.imagesHandler(images)\n            );\n        });\n    };\n\n    showUploadingImages = () =>\n        this.state.uploadedFiles.map((item) => (\n            <div\n                className=\"dropzone_box\"\n                key={item.public_id}\n                onClick={() => this.onRemove(item.public_id)}\n            >\n                <div\n                    className=\"wrap\"\n                    style={{ background: `url(${item.url}) no-repeat` }}\n                ></div>\n            </div>\n        ));\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.reset) {\n            return (state = {\n                uploadedFiles: [],\n            });\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <div>\n                <section>\n                    <div className=\"dropzone clear\">\n                        <Dropzone\n                            onDrop={(e) => this.onDrop(e)}\n                            multiple={false}\n                            className=\"dropzone_box\"\n                        >\n                            <div className=\"wrap\">\n                                <FontAwesomeIcon icon={faPlusCircle} />\n                            </div>\n                        </Dropzone>\n                        {this.showUploadingImages()}\n                        {this.state.uploading ? (\n                            <div style={{ textAlign: \"center\", paddingTop: \"60px\" }}>\n                                <CircularProgress\n                                    style={{ color: \"#00bcd4\" }}\n                                    thickness={7}\n                                />\n                            </div>\n                        ) : null}\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default FileUpload;\n","import React, { Component } from \"react\";\nimport UserLayout from \"../../../HOC/user\";\n\nimport FileUpload from \"../../utils/Form/fileUpload\";\n\nimport FormField from \"../../utils/Form/formField\";\nimport {\n    update,\n    generateData,\n    isFormValid,\n    populateOptionFields,\n    resetFields,\n} from \"../../utils/Form/formAction\";\n\nimport { connect } from \"react-redux\";\nimport {\n    getBrands,\n    getWoods,\n    addProduct,\n    clearProduct,\n} from \"../../../actions/products_actions\";\n\nclass AddProduct extends Component {\n    state = {\n        formError: false,\n        formSuccess: \"\",\n        formdata: {\n            name: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Product name\",\n                    name: \"name_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your name\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            description: {\n                element: \"textarea\",\n                value: \"\",\n                config: {\n                    label: \"Product description\",\n                    name: \"description_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your description\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            price: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Product price\",\n                    name: \"price_input\",\n                    type: \"number\",\n                    placeholder: \"Enter your price\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            brand: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Product brand\",\n                    name: \"brands_input\",\n                    options: [],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            shipping: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Shipping\",\n                    name: \"shipping_input\",\n                    options: [\n                        { key: true, value: \"Yes\" },\n                        { key: false, value: \"No\" },\n                    ],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            available: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Availbale, in stock\",\n                    name: \"availbale_input\",\n                    options: [\n                        { key: true, value: \"Yes\" },\n                        { key: false, value: \"No\" },\n                    ],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            wood: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Wood material\",\n                    name: \"wood_input\",\n                    options: [],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            frets: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Frets\",\n                    name: \"frets_input\",\n                    options: [\n                        { key: 20, value: 20 },\n                        { key: 21, value: 21 },\n                        { key: 22, value: 22 },\n                        { key: 24, value: 24 },\n                    ],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            publish: {\n                element: \"select\",\n                value: \"\",\n                config: {\n                    label: \"Publish\",\n                    name: \"publish_input\",\n                    options: [\n                        { key: true, value: \"Public\" },\n                        { key: false, value: \"Hidden\" },\n                    ],\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            images: {\n                value: [],\n                validation: {\n                    required: false,\n                },\n                valid: true,\n                touched: false,\n                validationMessage: \"\",\n                showlabel: false,\n            },\n        },\n    };\n\n    componentDidMount() {\n        const formdata = this.state.formdata;\n        this.props.dispatch(getBrands()).then((response) => {\n            const newFormdata = populateOptionFields(\n                formdata,\n                this.props.products.brands,\n                \"brand\"\n            );\n            this.updateField(newFormdata);\n        });\n        this.props.dispatch(getWoods()).then((response) => {\n            const newFormdata = populateOptionFields(\n                formdata,\n                this.props.products.woods,\n                \"wood\"\n            );\n            this.updateField(newFormdata);\n        });\n    }\n\n    updateField = (formdata) => {\n        this.setState({ formdata });\n    };\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"products\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    resetFieldHandler = () => {\n        const newFormdata = resetFields(this.state.formdata, \"products\");\n        this.setState(\n            {\n                formSuccess: true,\n                formdata: newFormdata,\n            },\n            () => {\n                this.props.dispatch(clearProduct());\n            }\n        );\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        const dataToSubmit = generateData(this.state.formdata, \"products\");\n        console.log(dataToSubmit);\n        let formIsValid = isFormValid(this.state.formdata, \"register\");\n        if (formIsValid) {\n            console.log(dataToSubmit);\n            this.props.dispatch(addProduct(dataToSubmit)).then(() => {\n                if (this.props.products.addProduct.success) {\n                    this.resetFieldHandler();\n                } else {\n                    this.setState({\n                        formError: true,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    imagesHandler = (images) => {\n        const newFormData = { ...this.state.formdata };\n        newFormData[\"images\"].value = images;\n        newFormData[\"images\"].valid = true;\n\n        this.setState({\n            formdata: newFormData,\n        });\n    };\n\n    render() {\n        return (\n            <UserLayout>\n                <div>\n                    <h1>Add product</h1>\n                    <form onSubmit={(event) => this.submbitForm(event)}>\n                        <FileUpload\n                            imagesHandler={(images) => this.imagesHandler(images)}\n                            reset={this.state.formSuccess}\n                        />\n                        <FormField\n                            id={\"name\"}\n                            formdata={this.state.formdata.name}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"description\"}\n                            formdata={this.state.formdata.description}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"price\"}\n                            formdata={this.state.formdata.price}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <div className=\"form_devider\"></div>\n                        <FormField\n                            id={\"brand\"}\n                            formdata={this.state.formdata.brand}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"shipping\"}\n                            formdata={this.state.formdata.shipping}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"available\"}\n                            formdata={this.state.formdata.available}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"wood\"}\n                            formdata={this.state.formdata.wood}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <div className=\"form_devider\"></div>\n                        <FormField\n                            id={\"frets\"}\n                            formdata={this.state.formdata.frets}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        <FormField\n                            id={\"publish\"}\n                            formdata={this.state.formdata.publish}\n                            change={(element) => this.updateForm(element)}\n                        />\n                        {this.state.formSuccess ? (\n                            <div className=\"form_success\">Success</div>\n                        ) : null}\n                        {this.state.formError ? (\n                            <div className=\"error_label\">Please check your data</div>\n                        ) : null}\n                        <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                            Add product\n                        </button>\n                    </form>\n                </div>\n            </UserLayout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(AddProduct);\n","import React, { Component } from \"react\";\n\nimport FormField from \"../../utils/Form/formField\";\nimport {\n    update,\n    generateData,\n    isFormValid,\n    resetFields,\n} from \"../../utils/Form/formAction\";\n\nimport { connect } from \"react-redux\";\nimport { getBrands, addBrand } from \"../../../actions/products_actions\";\n\nclass ManageBrands extends Component {\n    state = {\n        formError: false,\n        formSuccess: \"\",\n        formdata: {\n            name: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Brand name\",\n                    name: \"brand_input\",\n                    type: \"text\",\n                    placeholder: \"Enter the brand\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n        },\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getBrands());\n    }\n\n    showCategoryItems = () =>\n        this.props.products.brands\n            ? this.props.products.brands.map((item, i) => (\n                  <div className=\"category_item\" key={i}>\n                      {item.name}\n                  </div>\n              ))\n            : null;\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"brands\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    resetFieldsHandler = () => {\n        const newFormdata = resetFields(this.state.formdata, \"brand\");\n        this.setState(\n            {\n                formdata: newFormdata,\n                formSuccess: true,\n            },\n            () => {\n                setTimeout(() => {\n                    this.setState({ formSuccess: \"\", formError: false });\n                }, 3000);\n            }\n        );\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        const dataToSubmit = generateData(this.state.formdata, \"brand\");\n        let formIsValid = isFormValid(this.state.formdata, \"brand\");\n        if (formIsValid) {\n            this.props\n                .dispatch(addBrand(dataToSubmit, this.props.products.brands))\n                .then((response) => {\n                    if (response.payload.success) {\n                        this.resetFieldsHandler();\n                    } else {\n                        this.setState({\n                            formError: true,\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"admin_category_wrapper\">\n                <h1>Brands</h1>\n                <div className=\"admin_two_column\">\n                    <div className=\"left\">\n                        <div className=\"brands_container\">{this.showCategoryItems()}</div>\n                    </div>\n                    <div className=\"right\">\n                        <form onSubmit={(event) => this.submtForm(event)}>\n                            <FormField\n                                id={\"name\"}\n                                formdata={this.state.formdata.name}\n                                change={(element) => this.updateForm(element)}\n                            />\n                            {this.state.formSuccess ? (\n                                <div className=\"form_success\">Success</div>\n                            ) : null}\n                            {this.state.formError ? (\n                                <div className=\"error_label\">Please check your data</div>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                onClick={(event) => this.submitForm(event)}\n                            >\n                                Add brand\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(ManageBrands);\n","import React, { Component } from \"react\";\n\nimport FormField from \"../../utils/Form/formField\";\nimport {\n    update,\n    generateData,\n    isFormValid,\n    resetFields,\n} from \"../../utils/Form/formAction\";\n\nimport { connect } from \"react-redux\";\nimport { getWoods, addWood } from \"../../../actions/products_actions\";\n\nclass MaageWoods extends Component {\n    state = {\n        formError: false,\n        formSuccess: \"\",\n        formdata: {\n            name: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Wood name\",\n                    name: \"wood_input\",\n                    type: \"text\",\n                    placeholder: \"Enter the wood\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n        },\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getWoods());\n    }\n\n    showCategoryItems = () =>\n        this.props.products.woods\n            ? this.props.products.woods.map((item, i) => (\n                  <div className=\"category_item\" key={i}>\n                      {item.name}\n                  </div>\n              ))\n            : null;\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"wood\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    resetFieldsHandler = () => {\n        const newFormdata = resetFields(this.state.formdata, \"wood\");\n        this.setState(\n            {\n                formdata: newFormdata,\n                formSuccess: true,\n            },\n            () => {\n                setTimeout(() => {\n                    this.setState({ formSuccess: \"\", formError: false });\n                }, 3000);\n            }\n        );\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        const dataToSubmit = generateData(this.state.formdata, \"wood\");\n        let formIsValid = isFormValid(this.state.formdata, \"wood\");\n        if (formIsValid) {\n            this.props\n                .dispatch(addWood(dataToSubmit, this.props.products.woods))\n                .then((response) => {\n                    if (response.payload.success) {\n                        this.resetFieldsHandler();\n                    } else {\n                        this.setState({\n                            formError: true,\n                        });\n                    }\n                });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"admin_category_wrapper\">\n                <h1>Woods</h1>\n                <div className=\"admin_two_column\">\n                    <div className=\"left\">\n                        <div className=\"brands_container\">{this.showCategoryItems()}</div>\n                    </div>\n                    <div className=\"right\">\n                        <form onSubmit={(event) => this.submtForm(event)}>\n                            <FormField\n                                id={\"name\"}\n                                formdata={this.state.formdata.name}\n                                change={(element) => this.updateForm(element)}\n                            />\n                            {this.state.formSuccess ? (\n                                <div className=\"form_success\">Success</div>\n                            ) : null}\n                            {this.state.formError ? (\n                                <div className=\"error_label\">Please check your data</div>\n                            ) : null}\n                            <button\n                                type=\"submit\"\n                                onClick={(event) => this.submitForm(event)}\n                            >\n                                Add wood\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(MaageWoods);\n","import React from \"react\";\nimport UserLayout from \"../../../HOC/user\";\nimport ManageBrands from \"./manage_brands\";\nimport ManageWoods from \"./manage_woods\";\n\nconst ManageCategories = () => {\n    return (\n        <UserLayout>\n            <ManageBrands />\n            <ManageWoods />\n        </UserLayout>\n    );\n};\n\nexport default ManageCategories;\n","import React from \"react\";\n\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faTruck from \"@fortawesome/fontawesome-free-solid/faTruck\";\nimport faCheck from \"@fortawesome/fontawesome-free-solid/faCheck\";\nimport faTimes from \"@fortawesome/fontawesome-free-solid/faTimes\";\nimport MyButton from \"../utils/button\";\n\nconst ProductNfo = (props) => {\n    const detail = props.detail;\n    const showProductTags = (detail) => (\n        <div className=\"product_tags\">\n            {detail.shipping ? (\n                <div className=\"tag\">\n                    <div>\n                        <FontAwesomeIcon icon={faTruck} />\n                    </div>\n                    <div className=\"tag_text\">\n                        <div>Free shipping</div>\n                        <div>And return </div>\n                    </div>\n                </div>\n            ) : null}\n            {detail.available ? (\n                <div className=\"tag\">\n                    <div>\n                        <FontAwesomeIcon icon={faCheck} />\n                    </div>\n                    <div className=\"tag_text\">\n                        <div>Available</div>\n                        <div>in store</div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"tag\">\n                    <div>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                    <div className=\"tag_text\">\n                        <div>Not Available</div>\n                        <div>Preoder only</div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n\n    const showProductActions = (detail) => (\n        <div className=\"product_actions\">\n            <div className=\"price\">${detail.price}</div>\n            <div className=\"cart\">\n                <MyButton\n                    type=\"add_to_cart_link\"\n                    runAction={() => props.addCart(detail._id)}\n                />\n            </div>\n        </div>\n    );\n    const showProductSpecifications = (detail) => (\n        <div className=\"product_specifications\">\n            <h2>Specs: </h2>\n            <div>\n                <div className=\"item\">\n                    <strong>Frets: </strong>\n                    {detail.frets}\n                </div>\n                <div className=\"item\">\n                    <strong>Wood: </strong>\n                    {detail.wood.name}\n                </div>\n            </div>\n        </div>\n    );\n    return (\n        <div>\n            <h1>\n                {detail.brand.name} {detail.name}\n            </h1>\n            <p>{detail.description}</p>\n            {showProductTags(detail)}\n            {showProductActions(detail)}\n            {showProductSpecifications(detail)}\n        </div>\n    );\n};\n\nexport default ProductNfo;\n","import React, { Component } from \"react\";\nimport LightBox from \"react-images\";\n\nclass ImageLightBox extends Component {\n    state = {\n        lightboxIsOpen: true,\n        currentImage: this.props.pos,\n        images: [],\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.images) {\n            const images = [];\n            props.images.forEach((element) => {\n                images.push({ src: `${element}` });\n            });\n            return (state = {\n                images,\n            });\n        }\n        return false;\n    }\n\n    closeLightBox = () => {\n        this.props.onClose();\n    };\n\n    gotoPrevious = () => {\n        this.setState({\n            currentImage: this.state.currentImage - 1,\n        });\n    };\n\n    gotoNext = () => {\n        this.setState({\n            currentImage: this.state.currentImage + 1,\n        });\n    };\n\n    render() {\n        return (\n            <LightBox\n                currentImage={this.state.currentImage}\n                images={this.state.images}\n                isOpen={this.state.lightboxIsOpen}\n                onClickPrev={() => this.gotoPrevious()}\n                onClickNext={() => this.gotoNext()}\n                onClose={() => this.closeLightBox()}\n            ></LightBox>\n        );\n    }\n}\n\nexport default ImageLightBox;\n","import React, { Component } from \"react\";\nimport ImageLightBox from \"../utils/lightBox\";\n\nclass ProductImg extends Component {\n    state = {\n        lightBox: false,\n        imagePos: 0,\n        lightBoxImages: [],\n        open: false,\n    };\n\n    componentDidMount() {\n        if (this.props.detail.images.length > 0) {\n            let lightBoxImages = [];\n            this.props.detail.images.forEach((item) => {\n                lightBoxImages.push(item.url);\n            });\n            this.setState({\n                lightBoxImages,\n            });\n        }\n    }\n\n    renderCardImage = (images) => {\n        if (images.length > 0) {\n            return images[0].url;\n        } else {\n            return `/images/image_not_availble.png`;\n        }\n    };\n\n    showThumbs = () =>\n        this.state.lightBoxImages.map((item, i) =>\n            i > 0 ? (\n                <div\n                    key={i}\n                    onClick={() => this.handleLightBox(i)}\n                    className=\"thumb\"\n                    style={{ background: `url(${item}) no-repeat` }}\n                ></div>\n            ) : null\n        );\n\n    handleLightBox = (pos) => {\n        if (this.state.lightBoxImages.length > 1) {\n            this.setState({\n                lightBox: true,\n                imagePos: pos,\n            });\n        }\n    };\n\n    handleLightBoxClose = () => {\n        this.setState({\n            lightBox: false,\n        });\n    };\n\n    render() {\n        const { detail } = this.props;\n        return (\n            <div className=\"product_image_container\">\n                <div className=\"main_pic\">\n                    <div\n                        style={{\n                            background: `url(${this.renderCardImage(\n                                detail.images\n                            )}) no-repeat`,\n                        }}\n                        onClick={() => this.handleLightBox(0)}\n                    ></div>\n                </div>\n                <div className=\"main_thumbs\">{this.showThumbs()}</div>\n                {this.state.lightBox ? (\n                    <ImageLightBox\n                        id={detail.id}\n                        images={this.state.lightBoxImages}\n                        open={this.state.open}\n                        pos={this.state.imagePos}\n                        onClose={() => this.handleLightBoxClose()}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default ProductImg;\n","import React, { Component } from \"react\";\nimport PageTop from \"../utils/page_top\";\n\nimport { connect } from \"react-redux\";\nimport { getProduct, clearProductDetails } from \"../../actions/products_actions\";\nimport ProductNfo from \"./productNfo\";\nimport ProductImg from \"./productImg\";\nimport { addToCart } from \"../../actions/user_actions\";\n\nclass ProductPage extends Component {\n    componentDidMount() {\n        const id = this.props.match.params.id;\n        this.props.dispatch(getProduct(id)).then((response) => {\n            if (!response.payload) {\n                this.props.history.push(\"/\");\n            }\n        });\n    }\n\n    getBack = () => {\n        this.props.history.push(\"/\");\n    };\n\n    componentWillUnmount() {\n        this.props.dispatch(clearProductDetails());\n    }\n\n    addToCartHandler = (id) => {\n        this.props.dispatch(addToCart(id));\n    };\n\n    render() {\n        return (\n            <div>\n                <PageTop title=\"Product detail\" />\n                <div className=\"container\">\n                    {this.props.products.productDetails ? (\n                        <div className=\"product_detail_wrapper\">\n                            <div className=\"left\">\n                                <div style={{ width: \"500px\" }}>\n                                    <ProductImg\n                                        detail={this.props.products.productDetails}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"right\">\n                                <ProductNfo\n                                    addCart={(id) => this.addToCartHandler(id)}\n                                    detail={this.props.products.productDetails}\n                                />\n                            </div>\n                        </div>\n                    ) : (\n                        \"Sorry the product not found. U will back to home a seconds...\"\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    return {\n        products: state.products,\n    };\n}\n\nexport default connect(mapStateToProps)(ProductPage);\n","import React from \"react\";\n\nconst UserProductBlock = ({ products, removeItem }) => {\n    const renderCartImg = (images) => {\n        if (images.length > 0) {\n            return images[0].url;\n        } else {\n            return \"/images/image_not_availble.png\";\n        }\n    };\n\n    const renderItems = () =>\n        products.cartDetail\n            ? products.cartDetail.map((item) => (\n                  <div className=\"user_product_block\" key={item._id}>\n                      <div className=\"item\">\n                          <div\n                              className=\"image\"\n                              style={{\n                                  background: `url(${renderCartImg(\n                                      item.images\n                                  )}) no-repeat`,\n                              }}\n                          ></div>\n                      </div>\n                      <div className=\"item\">\n                          <h4>Product name</h4>\n                          <div>\n                              {item.brand.name} {item.name}\n                          </div>\n                      </div>\n                      <div className=\"item\">\n                          <h4>Quantity</h4>\n                          <div>{item.quantity}</div>\n                      </div>\n                      <div className=\"item\">\n                          <h4>Price</h4>\n                          <div>${item.price}</div>\n                      </div>\n                      <div className=\"item btn\">\n                          <div\n                              className=\"cart_remove_btn\"\n                              onClick={() => removeItem(item._id)}\n                          >\n                              Remove\n                          </div>\n                      </div>\n                  </div>\n              ))\n            : null;\n\n    return <div>{renderItems()}</div>;\n};\n\nexport default UserProductBlock;\n","import React, { Component } from \"react\";\n\nimport PaypalExpressBtn from \"react-paypal-express-checkout\";\n\nclass Paypal extends Component {\n    render() {\n        const onSuccess = (payment) => {\n            // console.log(payment);\n            this.props.onSuccess(payment);\n        };\n\n        const onCancel = (data) => {\n            console.log(data);\n        };\n        const onError = (error) => {\n            console.log(error);\n        };\n        let env = \"sandbox\";\n        let currency = \"USD\";\n        let total = this.props.toPay;\n\n        const client = {\n            sandbox:\n                \"AZPgbZgP2zp4RIXxkpjCQHxGwt4PdyxyLOXL_qfLSr0RZEdtl-o-V7GzE1K3oRbdrqnyRIhxuTdzzb-q\",\n            production: \"\",\n        };\n\n        return (\n            <div>\n                <PaypalExpressBtn\n                    env={env}\n                    client={client}\n                    currency={currency}\n                    total={total}\n                    onError={onError}\n                    onSuccess={onSuccess}\n                    onCancel={onCancel}\n                    style={{\n                        size: \"large\",\n                        color: \"blue\",\n                        shape: \"rect\",\n                        label: \"checkout\",\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Paypal;\n","import React, { Component } from \"react\";\n\nimport UserLayout from \"../../HOC/user\";\n\nimport { connect } from \"react-redux\";\n\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faFrown from \"@fortawesome/fontawesome-free-solid/faFrown\";\nimport faSmile from \"@fortawesome/fontawesome-free-solid/faSmile\";\nimport { getCartItems, removeItem, onSuccessBuy } from \"../../actions/user_actions\";\nimport UserProductBlock from \"../utils/User/product_block\";\nimport Paypal from \"../utils/paypal\";\n\n//AZPgbZgP2zp4RIXxkpjCQHxGwt4PdyxyLOXL_qfLSr0RZEdtl-o-V7GzE1K3oRbdrqnyRIhxuTdzzb-q\nclass UserCart extends Component {\n    state = {\n        loading: true,\n        total: 0,\n        showTotal: false,\n        showSuccess: false,\n    };\n\n    componentDidMount() {\n        let cartItems = [];\n        let user = this.props.user;\n        if (user.userData.cart) {\n            if (user.userData.cart.length > 0) {\n                user.userData.cart.forEach((item) => {\n                    cartItems.push(item._id);\n                });\n                this.props\n                    .dispatch(getCartItems(cartItems, user.userData.cart))\n                    .then((response) => {\n                        if (this.props.user.cartDetail.length > 0) {\n                            this.caculateTotal(this.props.user.cartDetail);\n                        }\n                    });\n            }\n        }\n    }\n\n    caculateTotal = (cartDetail) => {\n        let total = 0;\n        cartDetail.forEach((item) => {\n            total += parseInt(item.price, 10) * item.quantity;\n        });\n        this.setState({ total, showTotal: true });\n    };\n\n    removeFromCart = (_id) => {\n        this.props.dispatch(removeItem(_id)).then((response) => {\n            if (response.payload.cartDetail.length > 0) {\n                const cartDetail = response.payload.cartDetail;\n                const cart = response.payload.cart;\n                cart.forEach((item) => {\n                    cartDetail.forEach((k, i) => {\n                        if (item._id === k._id) {\n                            cartDetail[i].quantity = item.quantity;\n                        }\n                    });\n                });\n                this.caculateTotal(cartDetail);\n            } else {\n                this.setState({ showTotal: false });\n            }\n        });\n    };\n    showNoItemmessage = () => {\n        return (\n            <div className=\"cart_no_items\">\n                <FontAwesomeIcon icon={faFrown} />\n                <div>You have no items.</div>\n            </div>\n        );\n    };\n\n    transactionError = (data) => {\n        console.log(\"Paypal error\", data);\n    };\n\n    transactionCancel = (data) => {\n        console.log(\"Transaction cancel\");\n    };\n\n    transactionSuccess = (data) => {\n        this.props\n            .dispatch(\n                onSuccessBuy({\n                    cartDetail: this.props.user.cartDetail,\n                    paymentData: data,\n                })\n            )\n            .then(() => {\n                if (this.props.user.successBuy) {\n                    this.setState({\n                        showTotal: false,\n                        showSuccess: true,\n                    });\n                }\n            });\n    };\n\n    render() {\n        return (\n            <UserLayout>\n                <div>\n                    <h1>My cart</h1>\n                    <div className=\"user_cart\">\n                        <UserProductBlock\n                            products={this.props.user}\n                            type=\"cart\"\n                            removeItem={(_id) => this.removeFromCart(_id)}\n                        />\n                        {this.state.showTotal ? (\n                            <div>\n                                <div className=\"user_cart_sum\">\n                                    <div>Total amount: $ {this.state.total}</div>\n                                </div>\n                            </div>\n                        ) : this.state.showSuccess ? (\n                            <div className=\"cart_success\">\n                                <FontAwesomeIcon icon={faSmile} />\n                                <div>Thank you</div>\n                                <div>YOUR ORDER IS NOW COMPLETE</div>\n                            </div>\n                        ) : (\n                            this.showNoItemmessage()\n                        )}\n                    </div>\n                    {this.state.showTotal ? (\n                        <div className=\"paypal_button_container\">\n                            <Paypal\n                                toPay={this.state.total}\n                                transactionError={(data) => this.transactionError(data)}\n                                transactionCancel={(data) => this.transactionCancel(data)}\n                                onSuccess={(data) => this.transactionSuccess(data)}\n                            />\n                        </div>\n                    ) : null}\n                </div>\n            </UserLayout>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(UserCart);\n","import React, { Component } from \"react\";\nimport FormField from \"../utils/Form/formField\";\nimport {\n    update,\n    generateData,\n    isFormValid,\n    populateFields,\n} from \"../utils/Form/formAction\";\n\nimport { connect } from \"react-redux\";\nimport { updateData, clearUpdateUser } from \"../../actions/user_actions\";\n\nclass UpdatepersonalNfo extends Component {\n    state = {\n        formError: false,\n        formSuccess: \"\",\n        formdata: {\n            name: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"name_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your name\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            lastname: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"lastname_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your lastname\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            email: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"email_input\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                },\n                validation: {\n                    required: true,\n                    email: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n        },\n    };\n\n    componentDidMount() {\n        const newFormdata = populateFields(this.state.formdata, this.props.user.userData);\n\n        this.setState({ formdata: newFormdata });\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"update\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"update\");\n        let formIsValid = isFormValid(this.state.formdata, \"update\");\n        if (formIsValid) {\n            this.props.dispatch(updateData(dataToSubmit)).then(() => {\n                if (this.props.user.updateUser) {\n                    this.setState(\n                        {\n                            formSuccess: true,\n                        },\n                        () => {\n                            setTimeout(() => {\n                                this.props.dispatch(clearUpdateUser());\n                                this.setState({\n                                    formSuccess: false,\n                                });\n                            }, 2000);\n                        }\n                    );\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(event) => this.submitForm(event)}>\n                    <h2>Personal information</h2>\n                    <div className=\"form_block_two\">\n                        <div className=\"block\">\n                            <FormField\n                                id={\"name\"}\n                                formdata={this.state.formdata.name}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                        <div className=\"block\">\n                            <FormField\n                                id={\"lastname\"}\n                                formdata={this.state.formdata.lastname}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                    </div>\n                    <div>\n                        <FormField\n                            id={\"email\"}\n                            formdata={this.state.formdata.email}\n                            change={(element) => this.updateForm(element)}\n                        />\n                    </div>\n                    {this.state.formSuccess ? (\n                        <div className=\"form_success\">Success</div>\n                    ) : null}\n                    {this.state.formError ? (\n                        <div className=\"error_label\">Please check your data</div>\n                    ) : null}\n                    <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                        Update personal info\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(UpdatepersonalNfo);\n","import React from \"react\";\nimport UserLayout from \"../../HOC/user\";\nimport UpdatepersonalNfo from \"./update_personal_Nfo\";\n\nconst UpdateProfile = () => {\n    return (\n        <UserLayout>\n            <h1>Profile</h1>\n            <UpdatepersonalNfo />\n        </UserLayout>\n    );\n};\n\nexport default UpdateProfile;\n","import React, { Component } from \"react\";\nimport FormField from \"../../utils/Form/formField\";\nimport {\n    update,\n    generateData,\n    isFormValid,\n    populateFields,\n} from \"../../utils/Form/formAction\";\n\nimport { connect } from \"react-redux\";\nimport { getSiteData, updateSiteNfo } from \"../../../actions/site_actions\";\n\nclass UpdateSiteNfo extends Component {\n    state = {\n        formError: false,\n        formSuccess: false,\n        formdata: {\n            address: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Address\",\n                    name: \"address_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your site address\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            hours: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Working hours\",\n                    name: \"hours_input\",\n                    type: \"text\",\n                    placeholder: \"Enter your site working hours\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            phone: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Phone number\",\n                    name: \"phone_input\",\n                    type: \"text\",\n                    placeholder: \"Enter the phone number\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n            email: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    label: \"Shop email\",\n                    name: \"email_input\",\n                    type: \"email\",\n                    placeholder: \"Enter your site email\",\n                },\n                validation: {\n                    required: true,\n                    email: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n                showLabel: true,\n            },\n        },\n    };\n\n    componentDidMount() {\n        this.props.dispatch(getSiteData()).then(() => {\n            const newFormdata = populateFields(\n                this.state.formdata,\n                this.props.site.siteData[0]\n            );\n            this.setState({ formdata: newFormdata });\n        });\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"site\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"site\");\n        let formIsValid = isFormValid(this.state.formdata, \"site\");\n        if (formIsValid) {\n            this.props.dispatch(updateSiteNfo(dataToSubmit)).then(() => {\n                if (this.props.site.updateSiteSuccess) {\n                    this.setState(\n                        {\n                            formSuccess: true,\n                        },\n                        () => {\n                            setTimeout(() => {\n                                this.setState({ formSuccess: false });\n                            }, 2000);\n                        }\n                    );\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={(event) => this.submitForm(event)}>\n                    <h1>Site info</h1>\n                    <FormField\n                        id={\"address\"}\n                        formdata={this.state.formdata.address}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    <FormField\n                        id={\"hours\"}\n                        formdata={this.state.formdata.hours}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    <FormField\n                        id={\"phone\"}\n                        formdata={this.state.formdata.phone}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    <FormField\n                        id={\"email\"}\n                        formdata={this.state.formdata.email}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    <div>\n                        {this.state.formSuccess ? (\n                            <div className=\"form_success\">Success</div>\n                        ) : null}\n                        {this.state.formError ? (\n                            <div className=\"error_label\">Please check your data</div>\n                        ) : null}\n                        <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                            Update\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        site: state.site,\n    };\n}\n\nexport default connect(mapStateToProps)(UpdateSiteNfo);\n","import React from \"react\";\nimport UserLayout from \"../../../HOC/user\";\nimport UpdateSiteNfo from \"./update_site_nfo\";\n\nconst ManageSite = () => {\n    return (\n        <UserLayout>\n            <UpdateSiteNfo />\n        </UserLayout>\n    );\n};\n\nexport default ManageSite;\n","import React from \"react\";\nimport FontAweSomeIcon from \"@fortawesome/react-fontawesome\";\nimport faExclamation from \"@fortawesome/fontawesome-free-solid/faExclamation\";\n\nconst NotFound = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"not_found_container\">\n                <FontAweSomeIcon icon={faExclamation} />\n                <div>Oops !! page not found.</div>\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport UserLayout from \"../../../HOC/user\";\n\nimport Dropzone from \"react-dropzone\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport FontAwesomeIcon from \"@fortawesome/react-fontawesome\";\nimport faPlusCircle from \"@fortawesome/fontawesome-free-solid/faPlusCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nclass AddFile extends Component {\n    constructor() {\n        super();\n        this.state = {\n            formSuccess: false,\n            formError: false,\n            uploading: false,\n            files: [],\n        };\n    }\n\n    componentDidMount() {\n        axios.get(\"/api/user/admin-files\").then((response) => {\n            console.log(response.data);\n            this.setState({ files: response.data });\n        });\n    }\n\n    onDrop(files) {\n        this.setState({ uploading: true });\n        let formData = new FormData();\n        const config = {\n            header: { \"content-type\": \"multipart/form-data\" },\n        };\n        formData.append(\"file\", files[0]);\n        axios.post(\"/api/user/uploadfiles\", formData, config).then((response) => {\n            if (response.data.success) {\n                this.setState(\n                    { formSuccess: true, uploading: false, formError: false },\n                    () => {\n                        setTimeout(() => {\n                            this.setState({ formSuccess: false });\n                        }, 2000);\n                    }\n                );\n            }\n        });\n    }\n\n    showFileList = () =>\n        this.state.files\n            ? this.state.files.map((item, i) => (\n                  <li key={i}>\n                      <Link to={`/api/user/download/${item}`} target=\"_black\">\n                          {item}\n                      </Link>\n                  </li>\n              ))\n            : null;\n\n    render() {\n        return (\n            <UserLayout>\n                <h1>Upload file</h1>\n                <div>\n                    <Dropzone\n                        onDrop={(e) => this.onDrop(e)}\n                        multiple={false}\n                        className=\"dropzone_box\"\n                    >\n                        <div className=\"wrap\">\n                            <FontAwesomeIcon icon={faPlusCircle} />\n                        </div>\n                    </Dropzone>\n                    {this.state.uploading ? (\n                        <div style={{ textAlign: \"center\", paddingTop: \"60px\" }}>\n                            <CircularProgress\n                                style={{ color: \"#00bcd4\" }}\n                                thickness={7}\n                            />\n                        </div>\n                    ) : null}\n                    <div style={{ clear: \"both\" }}>\n                        {this.state.formSuccess ? (\n                            <div className=\"form_success\">Success</div>\n                        ) : null}\n                        {this.state.formError ? (\n                            <div className=\"error_label\">Please check your data</div>\n                        ) : (\n                            \"\"\n                        )}\n                    </div>\n                    <hr />\n                    <div>\n                        <ul>{this.showFileList()}</ul>\n                    </div>\n                </div>\n            </UserLayout>\n        );\n    }\n}\n\nexport default AddFile;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport FormField from \"../utils/Form/formField\";\nimport { update, generateData, isFormValid } from \"../utils/Form/formAction\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\n\nclass ResetUser extends Component {\n    state = {\n        formError: false,\n        formSucces: false,\n        formdata: {\n            email: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"email_input\",\n                    type: \"email\",\n                    placeholder: \"Enter your email\",\n                },\n                validation: {\n                    required: true,\n                    email: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n        },\n    };\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"reset_email\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"reset_email\");\n        let formIsValid = isFormValid(this.state.formdata, \"reset_email\");\n        if (formIsValid) {\n            axios.post(\"/api/user/reset-user\", dataToSubmit).then((response) => {\n                if (response.data.success) {\n                    this.setState({ formSucces: true });\n                } else {\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Reset password</h1>\n                <form onSubmit={(event) => this.submitForm(event)}>\n                    <FormField\n                        id={\"email\"}\n                        formdata={this.state.formdata.email}\n                        change={(element) => this.updateForm(element)}\n                    />\n                    {this.state.formSucces ? (\n                        <div className=\"form_success\">Done, Check your Email</div>\n                    ) : null}\n                    {this.state.formError ? (\n                        <div className=\"error_label\">Please check your data</div>\n                    ) : null}\n                    <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                        Send email to reset password\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ResetUser;\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\n\nimport FormField from \"../utils/Form/formField\";\nimport { update, generateData, isFormValid } from \"../utils/Form/formAction\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nclass ResetPass extends Component {\n    state = {\n        resetToken: \"\",\n        formError: false,\n        formErrorMessage: \"\",\n        formSuccess: false,\n        formdata: {\n            password: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"password_input\",\n                    type: \"password\",\n                    placeholder: \"Enter your password\",\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n            confirmPassword: {\n                element: \"input\",\n                value: \"\",\n                config: {\n                    name: \"confirm_password_input\",\n                    type: \"password\",\n                    placeholder: \"Confirm your password\",\n                },\n                validation: {\n                    required: true,\n                    confirm: \"password\",\n                },\n                valid: false,\n                touched: false,\n                validationMessage: \"\",\n            },\n        },\n    };\n\n    componentDidMount() {\n        const resetToken = this.props.match.params.token;\n        this.setState({ resetToken });\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element, this.state.formdata, \"reset_password\");\n        this.setState({\n            formError: false,\n            formdata: newFormdata,\n        });\n    };\n\n    submitForm = (event) => {\n        event.preventDefault();\n        let dataToSubmit = generateData(this.state.formdata, \"reset_password\");\n        let formIsValid = isFormValid(this.state.formdata, \"reset_password\");\n        dataToSubmit.token = this.state.resetToken;\n        if (formIsValid) {\n            axios.post(\"/api/user/reset-password\", dataToSubmit).then((response) => {\n                if (response.data.success) {\n                    this.setState({ formSuccess: true }, () =>\n                        setTimeout(() => {\n                            this.props.history.push(\"/register-login\");\n                        }, 2000)\n                    );\n                } else {\n                    this.setState({\n                        formError: true,\n                        formErrorMessage: response.data.message,\n                    });\n                }\n            });\n        } else {\n            this.setState({\n                formError: true,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form onSubmit={(event) => this.submitForm(event)}>\n                    <h2>Reset password</h2>\n                    <div className=\"form_block_two\">\n                        <div className=\"block\">\n                            <FormField\n                                id={\"password\"}\n                                formdata={this.state.formdata.password}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                        <div className=\"block\">\n                            <FormField\n                                id={\"confirmPassword\"}\n                                formdata={this.state.formdata.confirmPassword}\n                                change={(element) => this.updateForm(element)}\n                            />\n                        </div>\n                    </div>\n                    {this.state.formError ? (\n                        <div className=\"error_label\">{this.state.formErrorMessage}</div>\n                    ) : (\n                        \"\"\n                    )}\n                    <button type=\"submit\" onClick={(event) => this.submitForm(event)}>\n                        Reset password\n                    </button>\n                </form>\n                <Dialog open={this.state.formSuccess}>\n                    <div className=\"dialog_alert\">\n                        <div>Alright !!</div>\n                        <div>\n                            You will be redirected to the LOGIN in a couple seconds...\n                        </div>\n                    </div>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default ResetPass;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Layout from \"./HOC/layout\";\nimport RegisterLogin from \"./components/Register_login\";\nimport Register from \"./components/Register_login/register\";\nimport UserDashboard from \"./components/User\";\n\nimport Auth from \"./HOC/auth\";\nimport Shop from \"./components/Shop\";\nimport AddProduct from \"./components/User/Admin/add_product\";\nimport ManageCategories from \"./components/User/Admin/manage_categories\";\nimport ProductPage from \"./components/Product\";\nimport UserCart from \"./components/User/cart\";\nimport UpdateProfile from \"./components/User/user_profile\";\nimport ManageSite from \"./components/User/Admin/manage_site\";\nimport NotFound from \"./components/utils/not_found\";\nimport AddFile from \"./components/User/Admin/add_file\";\nimport ResetUser from \"./components/Reset_user\";\nimport ResetPass from \"./components/Reset_user/reset_pass\";\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path=\"/\" exact component={Auth(Home, null)} />\n                <Route path=\"/shop\" exact component={Auth(Shop, null)} />\n\n                <Route\n                    path=\"/product-details/:id\"\n                    exact\n                    component={Auth(ProductPage, null)}\n                />\n                <Route path=\"/register\" exact component={Auth(Register, false)} />\n\n                <Route\n                    path=\"/register-login\"\n                    exact\n                    component={Auth(RegisterLogin, false)}\n                />\n                <Route path=\"/reset-user\" exact component={Auth(ResetUser, false)} />\n                <Route\n                    path=\"/reset-password/:token\"\n                    exact\n                    component={Auth(ResetPass, false)}\n                />\n                <Route\n                    path=\"/user/dashboard\"\n                    exact\n                    component={Auth(UserDashboard, true)}\n                />\n                <Route\n                    path=\"/admin/add-product\"\n                    exact\n                    component={Auth(AddProduct, true)}\n                />\n                <Route\n                    path=\"/admin/manage-categories\"\n                    exact\n                    component={Auth(ManageCategories, true)}\n                />\n                <Route path=\"/user/cart\" exact component={Auth(UserCart, true)} />\n                <Route\n                    path=\"/user/user-profile\"\n                    exact\n                    component={Auth(UpdateProfile, true)}\n                />\n                <Route path=\"/admin/site-nfo\" exact component={Auth(ManageSite, true)} />\n                <Route path=\"/admin/add-file\" exact component={Auth(AddFile, true)} />\n                <Route component={Auth(NotFound, false)} />\n            </Switch>\n        </Layout>\n    );\n};\n\nexport default Routes;\n","import { combineReducers } from \"redux\";\nimport user from \"./user_reducer\";\nimport products from \"./product_reducer\";\nimport site from \"./site_reducer\";\nconst rootReducer = combineReducers({\n    user,\n    products,\n    site,\n});\n\nexport default rootReducer;\n","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n    ADD_TO_CART,\n    GET_CART_ITEMS_USER,\n    REMOVE_ITEM_FROM_CART,\n    ON_SUCCESS_BUY_USER,\n    UPDATE_DATA,\n    CLEAR_UPDATE_USER,\n} from \"../actions/types\";\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loginSuccess: action.payload };\n        case REGISTER_USER:\n            return { ...state, register: action.payload };\n        case AUTH_USER:\n            return { ...state, userData: action.payload };\n        case LOGOUT_USER:\n            return { ...state };\n        case ADD_TO_CART:\n            return { ...state, userData: { ...state.userData, cart: action.payload } };\n        case GET_CART_ITEMS_USER:\n            return { ...state, cartDetail: action.payload.product };\n        case REMOVE_ITEM_FROM_CART:\n            return {\n                ...state,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart,\n                },\n                cartDetail: action.payload.cartDetail,\n            };\n        case ON_SUCCESS_BUY_USER:\n            return {\n                ...state,\n                successBuy: action.payload.success,\n                userData: {\n                    ...state.userData,\n                    cart: action.payload.cart,\n                },\n                cartDetail: action.payload.cartDetail,\n            };\n        case UPDATE_DATA:\n            return {\n                ...state,\n                updateUser: action.payload,\n            };\n        case CLEAR_UPDATE_USER:\n            return {\n                ...state,\n                updateUser: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_PRODUCTS_BY_ARRIVAL,\n    GET_PRODUCTS_BY_SELL,\n    GET_WOODS,\n    GET_BRANDS,\n    GET_PRODUCTS_TO_SHOP,\n    ADD_PRODUCT,\n    ADD_BRAND,\n    ADD_WOOD,\n    GET_PRODUCT_DETAILS,\n    CLEAR_PRODUCT,\n    CLEAR_PRODUCT_DETAILS,\n} from \"../actions/types\";\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case GET_PRODUCTS_BY_ARRIVAL:\n            return { ...state, byArrival: action.payload };\n        case GET_PRODUCTS_BY_SELL:\n            return { ...state, bySell: action.payload };\n        case GET_WOODS:\n            return { ...state, woods: action.payload };\n        case GET_BRANDS:\n            return { ...state, brands: action.payload };\n        case GET_PRODUCTS_TO_SHOP:\n            return {\n                ...state,\n                toShop: action.payload.articles,\n                toShopSize: action.payload.size,\n            };\n        case ADD_PRODUCT:\n            return {\n                ...state,\n                addProduct: action.payload,\n            };\n        case CLEAR_PRODUCT: {\n            return {\n                ...state,\n                addProduct: action.payload,\n            };\n        }\n        case ADD_BRAND:\n            return {\n                ...state,\n                addBrand: action.payload.success,\n                brands: action.payload.brands,\n            };\n        case ADD_WOOD:\n            return {\n                ...state,\n                addWood: action.payload.success,\n                woods: action.payload.woods,\n            };\n        case GET_PRODUCT_DETAILS: {\n            return {\n                ...state,\n                productDetails: action.payload,\n            };\n        }\n        case CLEAR_PRODUCT_DETAILS: {\n            return {\n                ...state,\n                productDetails: action.payload,\n            };\n        }\n        default:\n            return state;\n    }\n}\n","import { GET_SITE_DATA, UPDATE_SITE_DATA } from \"../actions/types\";\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case GET_SITE_DATA:\n            return { ...state, siteData: action.payload };\n        case UPDATE_SITE_DATA:\n            return {\n                ...state,\n                siteData: action.payload.siteNfo,\n                updateSiteSuccess: action.payload.success,\n            };\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Resources/css/styles.css\";\n\nimport Routes from \"./routes\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport Reducer from \"./reducers\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    ReduxThunk\n)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}